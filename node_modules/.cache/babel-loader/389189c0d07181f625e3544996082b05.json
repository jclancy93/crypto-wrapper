{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\"; // Enter a valid infura key here to avoid being rate limited\n// You can get a key for free at https://infura.io/register\n\nconst INFURA_ID = \"INVALID_INFURA_KEY\";\nconst NETWORK_NAME = \"mainnet\";\n\nfunction useWeb3Modal(config = {}) {\n  _s();\n\n  const [provider, setProvider] = useState();\n  const [web3Modal, setWeb3Modal] = useState();\n  const [autoLoaded, setAutoLoaded] = useState(false);\n  const {\n    autoLoad = true,\n    infuraId = INFURA_ID,\n    NETWORK = NETWORK_NAME\n  } = config;\n  web3Modal === null || web3Modal === void 0 ? void 0 : web3Modal.connect(); // Web3Modal also supports many other wallets.\n  // You can see other options at https://github.com/Web3Modal/web3modal\n  // Open wallet selection modal.\n\n  const loadWeb3Modal = useCallback(async () => {\n    setWeb3Modal(new Web3Modal({\n      network: NETWORK,\n      cacheProvider: true,\n      providerOptions: {\n        walletconnect: {\n          package: WalletConnectProvider,\n          options: {\n            infuraId\n          }\n        },\n        injected: {\n          display: {\n            name: 'Metamask'\n          }\n        }\n      }\n    }));\n    const newProvider = await web3Modal.connect();\n    setProvider(new Web3Provider(newProvider));\n  }, [web3Modal]);\n  const logoutOfWeb3Modal = useCallback(async function () {\n    await (web3Modal === null || web3Modal === void 0 ? void 0 : web3Modal.clearCachedProvider());\n    window.location.reload();\n  }, [web3Modal]); // If autoLoad is enabled and the the wallet had been loaded before, load it automatically now.\n\n  useEffect(() => {\n    if (autoLoad && !autoLoaded && (web3Modal === null || web3Modal === void 0 ? void 0 : web3Modal.cachedProvider)) {\n      loadWeb3Modal();\n      setAutoLoaded(true);\n    }\n  }, [autoLoad, autoLoaded, loadWeb3Modal, setAutoLoaded, web3Modal === null || web3Modal === void 0 ? void 0 : web3Modal.cachedProvider]);\n  return [provider, loadWeb3Modal, logoutOfWeb3Modal];\n}\n\n_s(useWeb3Modal, \"ANum1oJRckKU0hessvXaOvHP/QY=\");\n\nexport default useWeb3Modal;","map":{"version":3,"sources":["/Users/jackclancy/Desktop/apps/nexus-wrapper/packages/react-app/src/hooks/useWeb3Modal.js"],"names":["useCallback","useEffect","useState","Web3Provider","Web3Modal","WalletConnectProvider","INFURA_ID","NETWORK_NAME","useWeb3Modal","config","provider","setProvider","web3Modal","setWeb3Modal","autoLoaded","setAutoLoaded","autoLoad","infuraId","NETWORK","connect","loadWeb3Modal","network","cacheProvider","providerOptions","walletconnect","package","options","injected","display","name","newProvider","logoutOfWeb3Modal","clearCachedProvider","window","location","reload","cachedProvider"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,qBAAP,MAAkC,8BAAlC,C,CAEA;AACA;;AACA,MAAMC,SAAS,GAAG,oBAAlB;AAEA,MAAMC,YAAY,GAAG,SAArB;;AAEA,SAASC,YAAT,CAAsBC,MAAM,GAAG,EAA/B,EAAmC;AAAA;;AACjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,EAAxC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,EAA1C;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAEc,IAAAA,QAAQ,GAAG,IAAb;AAAmBC,IAAAA,QAAQ,GAAGX,SAA9B;AAAyCY,IAAAA,OAAO,GAAGX;AAAnD,MAAoEE,MAA1E;AAEAG,EAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEO,OAAX,GANiC,CAQjC;AACA;AACA;;AACA,QAAMC,aAAa,GAAGpB,WAAW,CAAC,YAAY;AAC5Ca,IAAAA,YAAY,CAAC,IAAIT,SAAJ,CAAc;AACzBiB,MAAAA,OAAO,EAAEH,OADgB;AAEzBI,MAAAA,aAAa,EAAE,IAFU;AAGzBC,MAAAA,eAAe,EAAE;AACfC,QAAAA,aAAa,EAAE;AACbC,UAAAA,OAAO,EAAEpB,qBADI;AAEbqB,UAAAA,OAAO,EAAE;AACPT,YAAAA;AADO;AAFI,SADA;AAOfU,QAAAA,QAAQ,EAAE;AACRC,UAAAA,OAAO,EAAE;AACPC,YAAAA,IAAI,EAAE;AADC;AADD;AAPK;AAHQ,KAAd,CAAD,CAAZ;AAiBA,UAAMC,WAAW,GAAG,MAAMlB,SAAS,CAACO,OAAV,EAA1B;AACAR,IAAAA,WAAW,CAAC,IAAIR,YAAJ,CAAiB2B,WAAjB,CAAD,CAAX;AACD,GApBgC,EAoB9B,CAAClB,SAAD,CApB8B,CAAjC;AAsBA,QAAMmB,iBAAiB,GAAG/B,WAAW,CACnC,kBAAkB;AAChB,WAAMY,SAAN,aAAMA,SAAN,uBAAMA,SAAS,CAAEoB,mBAAX,EAAN;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAJkC,EAKnC,CAACvB,SAAD,CALmC,CAArC,CAjCiC,CAyCjC;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,QAAQ,IAAI,CAACF,UAAb,KAA2BF,SAA3B,aAA2BA,SAA3B,uBAA2BA,SAAS,CAAEwB,cAAtC,CAAJ,EAA0D;AACxDhB,MAAAA,aAAa;AACbL,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GALQ,EAKN,CAACC,QAAD,EAAWF,UAAX,EAAuBM,aAAvB,EAAsCL,aAAtC,EAAqDH,SAArD,aAAqDA,SAArD,uBAAqDA,SAAS,CAAEwB,cAAhE,CALM,CAAT;AAOA,SAAO,CAAC1B,QAAD,EAAWU,aAAX,EAA0BW,iBAA1B,CAAP;AACD;;GAlDQvB,Y;;AAoDT,eAAeA,YAAf","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\n// Enter a valid infura key here to avoid being rate limited\n// You can get a key for free at https://infura.io/register\nconst INFURA_ID = \"INVALID_INFURA_KEY\";\n\nconst NETWORK_NAME = \"mainnet\";\n\nfunction useWeb3Modal(config = {}) {\n  const [provider, setProvider] = useState();\n  const [web3Modal, setWeb3Modal] = useState();\n  const [autoLoaded, setAutoLoaded] = useState(false);\n  const { autoLoad = true, infuraId = INFURA_ID, NETWORK = NETWORK_NAME } = config;\n\n  web3Modal?.connect()\n  \n  // Web3Modal also supports many other wallets.\n  // You can see other options at https://github.com/Web3Modal/web3modal\n  // Open wallet selection modal.\n  const loadWeb3Modal = useCallback(async () => {\n    setWeb3Modal(new Web3Modal({\n      network: NETWORK,\n      cacheProvider: true,\n      providerOptions: {\n        walletconnect: {\n          package: WalletConnectProvider,\n          options: {\n            infuraId,\n          },\n        },\n        injected: {\n          display: {\n            name: 'Metamask'\n          }\n        }\n      },\n    }));\n    const newProvider = await web3Modal.connect();\n    setProvider(new Web3Provider(newProvider));\n  }, [web3Modal]);\n\n  const logoutOfWeb3Modal = useCallback(\n    async function () {\n      await web3Modal?.clearCachedProvider();\n      window.location.reload();\n    },\n    [web3Modal],\n  );\n\n  // If autoLoad is enabled and the the wallet had been loaded before, load it automatically now.\n  useEffect(() => {\n    if (autoLoad && !autoLoaded && web3Modal?.cachedProvider) {\n      loadWeb3Modal();\n      setAutoLoaded(true);\n    }\n  }, [autoLoad, autoLoaded, loadWeb3Modal, setAutoLoaded, web3Modal?.cachedProvider]);\n\n  return [provider, loadWeb3Modal, logoutOfWeb3Modal];\n}\n\nexport default useWeb3Modal;\n"]},"metadata":{},"sourceType":"module"}