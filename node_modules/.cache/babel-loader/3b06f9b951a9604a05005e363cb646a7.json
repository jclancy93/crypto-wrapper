{"ast":null,"code":"var _jsxFileName = \"/Users/jackclancy/Desktop/apps/nexus-wrapper/packages/react-app/src/components/Button.js\";\nimport React from \"react\";\nimport classnames from \"classnames\"; // interface Props {\n//   className?: string\n//   variant: \"primary\" | \"secondary\"\n//   onClick?: Function\n//   size?: \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\"\n//   children: ReactNode\n//   type?: \"button\" | \"submit\"\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseClassNames = \"inline-flex items-center justify-center border-transparent rounded shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 font-medium border\";\n\nconst sizeToPadding = size => {\n  if (size === \"xs\") return \"px-2.5 py-1.5\";\n  if (size === \"sm\") return \"px-3 py-2\";\n  if (size === \"md\") return \"px-4 py-2\";\n  if (size === \"lg\") return \"px-4 py-2\";else return \"px-6 py-3\";\n};\n\nconst variantToColors = variant => {\n  if (variant === \"primary\") return \"hover:bg-indigo-700 text-white\";\n  if (variant === \"secondary\") return \"hover:bg-indigo-200 text-indigo-700\";\n};\n\nexport const Button = ({\n  className,\n  size,\n  variant,\n  onClick,\n  type,\n  disabled = false,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: type,\n    onClick: onClick,\n    disabled: disabled,\n    className: classnames(`\n          ${sizeToPadding(size)}\n          ${variantToColors(variant)}\n          text-${size}\n          ${baseClassNames}\n          ${className}\n        `, {\n      'cursor-not-allowed': disabled,\n      'bg-gray-700': disabled,\n      'bg-gray-700': disabled,\n      \"hover:bg-indigo-700\": !disabled,\n      'bg-indigo-600': !disabled && type === \"primary\",\n      'bg-indigo-100': !disabled && type === \"secondary\"\n    }),\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/jackclancy/Desktop/apps/nexus-wrapper/packages/react-app/src/components/Button.js"],"names":["React","classnames","baseClassNames","sizeToPadding","size","variantToColors","variant","Button","className","onClick","type","disabled","props","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,cAAc,GAClB,qJADF;;AAGA,MAAMC,aAAa,GAAIC,IAAD,IAAU;AAC9B,MAAIA,IAAI,KAAK,IAAb,EAAmB,OAAO,eAAP;AACnB,MAAIA,IAAI,KAAK,IAAb,EAAmB,OAAO,WAAP;AACnB,MAAIA,IAAI,KAAK,IAAb,EAAmB,OAAO,WAAP;AACnB,MAAIA,IAAI,KAAK,IAAb,EAAmB,OAAO,WAAP,CAAnB,KACK,OAAO,WAAP;AACN,CAND;;AAQA,MAAMC,eAAe,GAAIC,OAAD,IAAa;AACnC,MAAIA,OAAO,KAAK,SAAhB,EAA2B,OAAO,gCAAP;AAC3B,MAAIA,OAAO,KAAK,WAAhB,EAA6B,OAAO,qCAAP;AAC9B,CAHD;;AAKA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaJ,EAAAA,IAAb;AAAmBE,EAAAA,OAAnB;AAA4BG,EAAAA,OAA5B;AAAqCC,EAAAA,IAArC;AAA2CC,EAAAA,QAAQ,GAAG,KAAtD;AAA6D,KAAGC;AAAhE,CAAD,KAA6E;AACjG,sBACE;AACE,IAAA,IAAI,EAAEF,IADR;AAEE,IAAA,OAAO,EAAED,OAFX;AAGE,IAAA,QAAQ,EAAEE,QAHZ;AAIE,IAAA,SAAS,EAAEV,UAAU,CAAE;AAC7B,YAAYE,aAAa,CAACC,IAAD,CAAO;AAChC,YAAYC,eAAe,CAACC,OAAD,CAAU;AACrC,iBAAiBF,IAAK;AACtB,YAAYF,cAAe;AAC3B,YAAYM,SAAU;AACtB,SAN2B,EAMhB;AACD,4BAAsBG,QADrB;AAED,qBAAeA,QAFd;AAGD,qBAAeA,QAHd;AAID,6BAAuB,CAACA,QAJvB;AAKD,uBAAkB,CAACA,QAAD,IAAaD,IAAI,KAAK,SALvC;AAMD,uBAAkB,CAACC,QAAD,IAAaD,IAAI,KAAK;AANvC,KANgB,CAJvB;AAAA,cAmBGE,KAAK,CAACC;AAnBT;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAxBM;KAAMN,M","sourcesContent":["import React from \"react\"\nimport classnames from \"classnames\"\n\n// interface Props {\n//   className?: string\n//   variant: \"primary\" | \"secondary\"\n//   onClick?: Function\n//   size?: \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\"\n//   children: ReactNode\n//   type?: \"button\" | \"submit\"\n// }\n\nconst baseClassNames =\n  \"inline-flex items-center justify-center border-transparent rounded shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 font-medium border\"\n\nconst sizeToPadding = (size) => {\n  if (size === \"xs\") return \"px-2.5 py-1.5\"\n  if (size === \"sm\") return \"px-3 py-2\"\n  if (size === \"md\") return \"px-4 py-2\"\n  if (size === \"lg\") return \"px-4 py-2\"\n  else return \"px-6 py-3\"\n}\n\nconst variantToColors = (variant) => {\n  if (variant === \"primary\") return \"hover:bg-indigo-700 text-white\"\n  if (variant === \"secondary\") return \"hover:bg-indigo-200 text-indigo-700\"\n}\n\nexport const Button = ({ className, size, variant, onClick, type, disabled = false, ...props }) => {\n  return (\n    <button\n      type={type}\n      onClick={onClick}\n      disabled={disabled}\n      className={classnames(`\n          ${sizeToPadding(size)}\n          ${variantToColors(variant)}\n          text-${size}\n          ${baseClassNames}\n          ${className}\n        `, {\n          'cursor-not-allowed': disabled,\n          'bg-gray-700': disabled,\n          'bg-gray-700': disabled,\n          \"hover:bg-indigo-700\": !disabled,\n          'bg-indigo-600': (!disabled && type === \"primary\"),\n          'bg-indigo-100': (!disabled && type === \"secondary\"),\n        })}\n    >\n      {props.children}\n    </button>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}