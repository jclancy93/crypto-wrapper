{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\"; // Enter a valid infura key here to avoid being rate limited\n// You can get a key for free at https://infura.io/register\n\nconst INFURA_ID = \"INVALID_INFURA_KEY\";\nconst web3Modal = new Web3Modal({\n  network: NETWORK,\n  cacheProvider: true,\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      options: {\n        infuraId\n      }\n    },\n    injected: {\n      display: {\n        name: \"Injected\",\n        description: \"Connect with the provider in your Browser\"\n      }\n    }\n  }\n});\nconst NETWORK_NAME = \"mainnet\";\n\nfunction useWeb3Modal(config = {}) {\n  _s();\n\n  const [provider, setProvider] = useState();\n  const [autoLoaded, setAutoLoaded] = useState(false);\n  const {\n    autoLoad = true,\n    infuraId = INFURA_ID,\n    NETWORK = NETWORK_NAME\n  } = config; // Web3Modal also supports many other wallets.\n  // You can see other options at https://github.com/Web3Modal/web3modal\n\n  this.web3Modal.connect(); // Open wallet selection modal.\n\n  const loadWeb3Modal = useCallback(async () => {\n    const newProvider = await web3Modal.connect();\n    setProvider(new Web3Provider(newProvider));\n  }, [web3Modal]);\n  const logoutOfWeb3Modal = useCallback(async function () {\n    await web3Modal.clearCachedProvider();\n    window.location.reload();\n  }, [web3Modal]); // If autoLoad is enabled and the the wallet had been loaded before, load it automatically now.\n\n  useEffect(() => {\n    if (autoLoad && !autoLoaded && web3Modal.cachedProvider) {\n      loadWeb3Modal();\n      setAutoLoaded(true);\n    }\n  }, [autoLoad, autoLoaded, loadWeb3Modal, setAutoLoaded, web3Modal.cachedProvider]);\n  return [provider, loadWeb3Modal, logoutOfWeb3Modal];\n}\n\n_s(useWeb3Modal, \"OgLl7G1iKqhrO3lbvl3ERoFUPIY=\");\n\nexport default useWeb3Modal;","map":{"version":3,"sources":["/Users/jackclancy/Desktop/apps/nexus-wrapper/packages/react-app/src/hooks/useWeb3Modal.js"],"names":["useCallback","useEffect","useState","Web3Provider","Web3Modal","WalletConnectProvider","INFURA_ID","web3Modal","network","NETWORK","cacheProvider","providerOptions","walletconnect","package","options","infuraId","injected","display","name","description","NETWORK_NAME","useWeb3Modal","config","provider","setProvider","autoLoaded","setAutoLoaded","autoLoad","connect","loadWeb3Modal","newProvider","logoutOfWeb3Modal","clearCachedProvider","window","location","reload","cachedProvider"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,qBAAP,MAAkC,8BAAlC,C,CAEA;AACA;;AACA,MAAMC,SAAS,GAAG,oBAAlB;AAEA,MAAMC,SAAS,GAAG,IAAIH,SAAJ,CAAc;AAC9BI,EAAAA,OAAO,EAAEC,OADqB;AAE9BC,EAAAA,aAAa,EAAE,IAFe;AAG9BC,EAAAA,eAAe,EAAE;AACfC,IAAAA,aAAa,EAAE;AACbC,MAAAA,OAAO,EAAER,qBADI;AAEbS,MAAAA,OAAO,EAAE;AACPC,QAAAA;AADO;AAFI,KADA;AAOjBC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,UADC;AAEPC,QAAAA,WAAW,EAAE;AAFN;AADD;AAPO;AAHa,CAAd,CAAlB;AAmBA,MAAMC,YAAY,GAAG,SAArB;;AAEA,SAASC,YAAT,CAAsBC,MAAM,GAAG,EAA/B,EAAmC;AAAA;;AACjC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,EAAxC;AACA,QAAM,CAACuB,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAEyB,IAAAA,QAAQ,GAAG,IAAb;AAAmBZ,IAAAA,QAAQ,GAAGT,SAA9B;AAAyCG,IAAAA,OAAO,GAAGW;AAAnD,MAAoEE,MAA1E,CAHiC,CAKjC;AACA;;AACA,OAAKf,SAAL,CAAeqB,OAAf,GAPiC,CASjC;;AACA,QAAMC,aAAa,GAAG7B,WAAW,CAAC,YAAY;AAC5C,UAAM8B,WAAW,GAAG,MAAMvB,SAAS,CAACqB,OAAV,EAA1B;AACAJ,IAAAA,WAAW,CAAC,IAAIrB,YAAJ,CAAiB2B,WAAjB,CAAD,CAAX;AACD,GAHgC,EAG9B,CAACvB,SAAD,CAH8B,CAAjC;AAKA,QAAMwB,iBAAiB,GAAG/B,WAAW,CACnC,kBAAkB;AAChB,UAAMO,SAAS,CAACyB,mBAAV,EAAN;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAJkC,EAKnC,CAAC5B,SAAD,CALmC,CAArC,CAfiC,CAuBjC;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0B,QAAQ,IAAI,CAACF,UAAb,IAA2BlB,SAAS,CAAC6B,cAAzC,EAAyD;AACvDP,MAAAA,aAAa;AACbH,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GALQ,EAKN,CAACC,QAAD,EAAWF,UAAX,EAAuBI,aAAvB,EAAsCH,aAAtC,EAAqDnB,SAAS,CAAC6B,cAA/D,CALM,CAAT;AAOA,SAAO,CAACb,QAAD,EAAWM,aAAX,EAA0BE,iBAA1B,CAAP;AACD;;GAhCQV,Y;;AAkCT,eAAeA,YAAf","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\n// Enter a valid infura key here to avoid being rate limited\n// You can get a key for free at https://infura.io/register\nconst INFURA_ID = \"INVALID_INFURA_KEY\";\n\nconst web3Modal = new Web3Modal({\n  network: NETWORK,\n  cacheProvider: true,\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      options: {\n        infuraId,\n      },\n    },\n  injected: {\n    display: {\n      name: \"Injected\",\n      description: \"Connect with the provider in your Browser\"\n    },\n  },\n  },\n});\n\nconst NETWORK_NAME = \"mainnet\";\n\nfunction useWeb3Modal(config = {}) {\n  const [provider, setProvider] = useState();\n  const [autoLoaded, setAutoLoaded] = useState(false);\n  const { autoLoad = true, infuraId = INFURA_ID, NETWORK = NETWORK_NAME } = config;\n\n  // Web3Modal also supports many other wallets.\n  // You can see other options at https://github.com/Web3Modal/web3modal\n  this.web3Modal.connect();\n\n  // Open wallet selection modal.\n  const loadWeb3Modal = useCallback(async () => {\n    const newProvider = await web3Modal.connect();\n    setProvider(new Web3Provider(newProvider));\n  }, [web3Modal]);\n\n  const logoutOfWeb3Modal = useCallback(\n    async function () {\n      await web3Modal.clearCachedProvider();\n      window.location.reload();\n    },\n    [web3Modal],\n  );\n\n  // If autoLoad is enabled and the the wallet had been loaded before, load it automatically now.\n  useEffect(() => {\n    if (autoLoad && !autoLoaded && web3Modal.cachedProvider) {\n      loadWeb3Modal();\n      setAutoLoaded(true);\n    }\n  }, [autoLoad, autoLoaded, loadWeb3Modal, setAutoLoaded, web3Modal.cachedProvider]);\n\n  return [provider, loadWeb3Modal, logoutOfWeb3Modal];\n}\n\nexport default useWeb3Modal;\n"]},"metadata":{},"sourceType":"module"}