{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { Contract } from '@ethersproject/contracts';\nimport { useMemo } from 'react';\nimport { useActiveWeb3React } from './index';\nimport { NXM_ABI } from '../static/abis/nxm.json';\nimport { WNXM_ABI } from '../static/abis/wnxm.json';\nimport { NETWORK_NXM_CONTRACT_ADDRESS, NETWORK_WNXM_CONTRACT_ADDRESS } from '../constants';\nexport function useContract(address, ABI, withSignerIfPossible = true) {\n  _s();\n\n  const {\n    library,\n    account\n  } = useActiveWeb3React();\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null;\n\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined);\n    } catch (error) {\n      console.error('Failed to get contract', error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n}\n\n_s(useContract, \"bS5GtDgwY2raBDSgRZeif67r/2o=\", false, function () {\n  return [useActiveWeb3React];\n});\n\nexport function useNxmContract(withSignerIfPossible = true) {\n  _s2();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId && NETWORK_NXM_CONTRACT_ADDRESS[chainId], NXM_ABI, withSignerIfPossible);\n}\n\n_s2(useNxmContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useWnxmContract(withSignerIfPossible = true) {\n  _s3();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId && NETWORK_WNXM_CONTRACT_ADDRESS[chainId], WNXM_ABI, withSignerIfPossible);\n}\n\n_s3(useWnxmContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});","map":{"version":3,"sources":["/Users/jackclancy/Desktop/apps/nexus-wrapper/packages/react-app/src/hooks/useContract.js"],"names":["Contract","useMemo","useActiveWeb3React","NXM_ABI","WNXM_ABI","NETWORK_NXM_CONTRACT_ADDRESS","NETWORK_WNXM_CONTRACT_ADDRESS","useContract","address","ABI","withSignerIfPossible","library","account","getContract","undefined","error","console","useNxmContract","chainId","useWnxmContract"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,0BAAzB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,kBAAT,QAAmC,SAAnC;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SACEC,4BADF,EAEEC,6BAFF,QAGO,cAHP;AAMA,OAAO,SAASC,WAAT,CAAqBC,OAArB,EAA8BC,GAA9B,EAAmCC,oBAAoB,GAAG,IAA1D,EAAgE;AAAA;;AACrE,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBV,kBAAkB,EAA/C;AAEA,SAAOD,OAAO,CAAC,MAAM;AACnB,QAAI,CAACO,OAAD,IAAY,CAACC,GAAb,IAAoB,CAACE,OAAzB,EAAkC,OAAO,IAAP;;AAClC,QAAI;AACF,aAAOE,WAAW,CAACL,OAAD,EAAUC,GAAV,EAAeE,OAAf,EAAwBD,oBAAoB,IAAIE,OAAxB,GAAkCA,OAAlC,GAA4CE,SAApE,CAAlB;AACD,KAFD,CAEE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;AACA,aAAO,IAAP;AACD;AACF,GARa,EAQX,CAACP,OAAD,EAAUC,GAAV,EAAeE,OAAf,EAAwBD,oBAAxB,EAA8CE,OAA9C,CARW,CAAd;AASD;;GAZeL,W;UACeL,kB;;;AAa/B,OAAO,SAASe,cAAT,CAAwBP,oBAAoB,GAAG,IAA/C,EAAqD;AAAA;;AAC1D,QAAM;AAAEQ,IAAAA;AAAF,MAAchB,kBAAkB,EAAtC;AACA,SAAOK,WAAW,CAChBW,OAAO,IAAIb,4BAA4B,CAACa,OAAD,CADvB,EAEhBf,OAFgB,EAGhBO,oBAHgB,CAAlB;AAKD;;IAPeO,c;UACMf,kB,EACbK,W;;;AAOT,OAAO,SAASY,eAAT,CAAyBT,oBAAoB,GAAG,IAAhD,EAAsD;AAAA;;AAC3D,QAAM;AAAEQ,IAAAA;AAAF,MAAchB,kBAAkB,EAAtC;AACA,SAAOK,WAAW,CAChBW,OAAO,IAAIZ,6BAA6B,CAACY,OAAD,CADxB,EAEhBd,QAFgB,EAGhBM,oBAHgB,CAAlB;AAKD;;IAPeS,e;UACMjB,kB,EACbK,W","sourcesContent":["import { Contract } from '@ethersproject/contracts'\nimport { useMemo } from 'react'\nimport { useActiveWeb3React } from './index'\nimport { NXM_ABI } from '../static/abis/nxm.json'\nimport { WNXM_ABI } from '../static/abis/wnxm.json'\nimport { \n  NETWORK_NXM_CONTRACT_ADDRESS,\n  NETWORK_WNXM_CONTRACT_ADDRESS\n} from '../constants'\n\n\nexport function useContract(address, ABI, withSignerIfPossible = true) {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useNxmContract(withSignerIfPossible = true) {\n  const { chainId } = useActiveWeb3React()\n  return useContract(\n    chainId && NETWORK_NXM_CONTRACT_ADDRESS[chainId],\n    NXM_ABI,\n    withSignerIfPossible,\n  )\n}\n\nexport function useWnxmContract(withSignerIfPossible = true) {\n  const { chainId } = useActiveWeb3React()\n  return useContract(\n    chainId && NETWORK_WNXM_CONTRACT_ADDRESS[chainId],\n    WNXM_ABI,\n    withSignerIfPossible\n  )\n}"]},"metadata":{},"sourceType":"module"}